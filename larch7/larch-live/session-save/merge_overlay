#!/bin/sh

# merge_overlay   - recreate 'mods' squashfs

# Author: Michael Towers (larch42 at googlemail dot com)
#
# This file is part of the larch project.
#
#    larch is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    larch is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with larch; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#----------------------------------------------------------------------------
# 2009.08.12

# Tries to rebuild mods.sqf on aufs, otherwise adds a new modsNN.sqf overlay

# test if the script is started by root user. If not, exit
if [ $UID -ne 0 ]; then
    echo "Only root can run ${APP}"; exit 1
fi

# Underlying system:        /.livesys/system
# 'mods' layer:             /.livesys/mods
# Overlay:                  /.livesys/overlay

domerge ()
{
    # Make a directory for a merged union
    merge_union=/.livesys/merge_union
    rm -rf ${merge_union}
    mkdir -p ${merge_union}

    echo "Mounting merge union"
    # This is using a new feature of aufs, to show whiteouts.
    layers="/.livesys/overlay=${ovl2mnt}:/.livesys/mods=${ovlmnt}"
    mount -t ${utype} -o ro,shwh,${bropt}${layers} ${utype} ${merge_union}
    if [ $? -ne 0 ]; then
        echo "** Couldn't mount merge union."
        return 1
    fi

    newmods ${merge_union}
    res=$?

    # Discard merge union
    umount ${merge_union}
    rm -r ${merge_union}

    [ ${res} -ne 0 ] && return 2

    echo "Renaming mods.tmp to mods.sqf_"
    mv "${overlaypath}/mods.tmp" "${overlaypath}/mods.sqf_"
    echo "merging finished"
}


newmods ()
{
    olaydir=$1
    echo "Building new 'mods' overlay to ${overlaypath}/mods.tmp"
    # Recreate the desired layout in a new directory, using mount --bind
    # ( this is probably over-complicated, but I got annoying warnings about
    #   conflicting permissions on the mount point when I didn't use a single
    #   source for squashfs - for some reason the squashfs root was set to
    #   mode 0777.)
    # The other version was:
    ## root directories which are included in mods.sqf
    #includedirs=""
    #for d in bin boot home lib mnt opt root sbin srv usr var; do
    #    if [ -d ${olaydir}/${d} ]; then
    #        includedirs="${includedirs} ${olaydir}/${d}"
    #    fi
    #done
    ## non-included /var directories
    #vardirs="${olaydir}/var/log ${olaydir}/var/tmp ${olaydir}/var/cache/pacman/pkg"
    #mksquashfs ${includedirs} "${overlaypath}/mods.tmp" -e ${vardirs}
    #res=$?
    #+++
    mods2=/.livesys/mods2
    rm -rf ${mods2}
    mkdir -p ${mods2}
    # root directories which are included in mods.sqf
    includedirs=""
    for d in bin boot home lib mnt opt root sbin srv usr var; do
        if [ -d ${olaydir}/${d} ]; then
            includedirs="${includedirs} ${d}"
            mkdir ${mods2}/${d}
            mount --bind ${olaydir}/${d} ${mods2}/${d}
        fi
    done

    # non-included /var directories
    vardirs="var/log var/tmp var/cache/pacman/pkg"
    mksquashfs ${mods2} "${overlaypath}/mods.tmp" -e ${vardirs}
    res=$?
    for d in ${includedirs}; do
        umount ${mods2}/${d}
    done
    rm -r ${mods2}
    #---
    if [ ${res} -ne 0 ]; then
        echo "ERROR: Couldn't create ${overlaypath}/mods.tmp"
        rm -f "${overlaypath}/mods.tmp"
        return 1
    fi

    echo "Recreating top overlay to ${overlaypath}/overlay.tar.lzo_"
    # Compress the overlay (with root dir 'overlay' retained)
    tar -cf - -C /.livesys overlay/etc | lzop > ${overlaypath}/overlay.tar.lzo_
    if [ $? -ne 0 ]; then
        echo "ERROR: couldn't create ${overlaypath}/overlay.tar.lzo_"
        rm -f ${overlaypath}/overlay.tar.lzo_
        return 1
    fi
}


doaddmod ()
{
    ! newmods /.livesys/overlay && return 2
    printf -v newmodfile "mods%02d.sqf" ${#msqfs[@]}
    echo "Renaming mods.tmp to ${newmodfile}"
    mv "${overlaypath}/mods.tmp" "${overlaypath}/${newmodfile}"
}


# The overlay device (where the archives will be saved)
echo "Rebuild squashfs overlay"
if [ -d "$1" ]; then
    overlaypath="$1"
else
    echo "ERROR: invalid directory ($1)"
    exit 1
fi

msqfs=( $( cd ${overlaypath}; echo mods*.sqf ) )

utype="$( cat /.livesys/utype )"
if [ "${utype}" = "aufs" ] && [ ${#msqfs[@]} -eq 1 ]; then
    sqfmnt="rr"
    ovlmnt="rr+wh"
    ovl2mnt="ro+wh"
    bropt="br:"
    opq=".wh..wh..opq"
    whlink=".wh..wh.aufs .wh..wh.plink"

    # flush pseudo-links (which keep track of changed hard linked files)
    auplink / flush
    domerge
    r=$?
    [ ${r} -ne 1 ] && exit ${r}
fi

doaddmod

