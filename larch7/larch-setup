#! /bin/bash
#
# larch-setup
#
# Author: Michael Towers <gradgrind[at]online[dot]de>
#
# This file is part of the larch project.
#
#    larch is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    larch is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with larch; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
#----------------------------------------------------------------------------
# 2009.12.08

REPO="ftp://ftp.berlios.de/pub/larch/larch7/i686"
#REPO=file://$( readlink -f larchrepo )

if [ "$1" = "-h" ]; then
    echo "larch-setup -h"
    echo "        # Display this information."
    echo "larch-setup"
    echo "        # Set up a larch build environment in the current directory."
    echo "        # x86_64 should be detected automatically."
    echo
    echo "This script unpacks larch, so that it"
    echo "can be run from this directory, without installing."
    echo "It also generates appropriate symlinks."
    echo
    echo "TODO:"
    echo "If there is no pacman in the PATH, a package containing a"
    echo "statically linked version of pacman and the configuration"
    echo "files it needs can be downloaded from the larch site and"
    echo "unpacked in the larch/run directory."
    echo "Also repo-add is extracted there and a pacman.conf is generated in"
    echo "the current directory, presenting a dialog for choosing the package"
    echo "server."
    echo "You can use an existing pacman.conf by placing this in the current"
    echo "directory."
    echo
    exit
fi

sysarch="$( uname -m )"
if [ "${sysarch}" != "x86_64" ]; then
    sysarch="i686"
fi

# Get path to this directory, via the location of this script
fullpath="$( readlink -f $0 )"
scriptdir="$( dirname ${fullpath} )"

# Just in case ...
cd ${scriptdir}

if [ -d larch0 ]; then
    echo "ERROR: larch0 directory exists already"
    exit 1
fi

fetch ()
{
    if [ -n "$( echo ${REPO} | grep "file://" )" ]; then
        base="$( echo ${REPO} | sed "s|file://||" )"
        cp ${base}/$1 .
    else
        wget ${REPO}/$1
    fi
}

rm -f *.pkg.tar.gz
rm -rf tmp
mkdir tmp
cd tmp
fetch larch.db.tar.gz
tar -xzf larch.db.tar.gz
d=$( ls | grep "^larch-7" )
larchpak=$( grep -A 1 -e "%FILENAME%" ${d}/desc | grep -v "%" )
cd ${scriptdir}
fetch ${larchpak}
cd tmp
d=$( ls | grep "^uipi-" )
larchpak=$( grep -A 1 -e "%FILENAME%" ${d}/desc | grep -v "%" )
cd ${scriptdir}
fetch ${larchpak}

rm -rf tmp
mkdir tmp
tar -xzf larch-7*.pkg.tar.gz -C tmp
mv tmp/opt/apps/larch larch0
tar -xzf uipi-*.pkg.tar.gz -C tmp
mv tmp/usr/bin/quip larch0
mv tmp/usr/lib/python*/site-packages/uipi.py larch0/modules
rm -rf tmp

ln -s larch0/larch.py larch

# Check that pacman is available.
#if ! which pacman &>/dev/null; then
    # Fetch the pacman package from the larch site if there isn't a
    # pacman script in larch/run
#    if ! [ -f larch/run/pacman ]; then
#        fetch pacman-pack.tar.gz
#        if ! [ -f pacman-pack.tar.gz ]; then
#            echo "ERROR: couldn't fetch pacman package"
#            exit 1
#        fi
        # Extract the needed files from the package
#        tar -xzf pacman-pack.tar.gz
#        cp larch/config/mirrorlist repolist
#        if ! [ -f pacman.conf ]; then
#            cp larch/config/pacman.conf pacman.conf
            # Select a package server
#            larch/run/getPackageServer -i repolist pacman.conf
#            cp pacman.conf pacman.conf.0
            # Prevent error messages because of missing /etc/pacman.d/mirrorlist
#            sed 's|^\(Include =\)|#\1|' -i pacman.conf
#        fi
#    fi
#fi

